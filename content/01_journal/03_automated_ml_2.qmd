---
title: "Automated Machine Learning with H2O (II)"
author: "Adrian Florea"
---

# Challenge 4: Using AutoML with the Product Backorders Dataset

The journal qmd file has issues with running h2o in its entirety. Therefore the results are imported and shown here. For the full computation steps, refer to the corresponding `.R` file `automated_ml_II_CHALLENGE.R` located in folder `...\CHALLENGES`.

```{r}
#| eval: false
#| message: false

# H2O modeling
library(h2o)
library(tidyverse)
library(rsample)
library(recipes)

h2o.init()

# 1 Load and split data set ----

product_backorders_tbl <- read_csv("~/GitHub/ss24-bdml-Adrian-0402/source_data/automated/product_backorders.csv")

# Predictors info from given paper
# – x1: Current inventory level of component;
# – x2: Registered transit time;
# – x3: In transit quantity;
# – x4,5,6: Forecast sales for the next 3, 6 and 9 months;
# – x7,8,9,10: Sales quantity for the prior 1, 3, 6, 9 months;
# – x11: Minimum recommended amount in stock;
# – x12: Parts overdue from source;
# – x13,14: Source performance in last 6 and 12 months;
# – x15: Amount of stock orders overdue;
# – x16−21: General risk flags;
# – y: Product went on backorder.

# Remove "sku", because its unique for every product
product_backorders_readable_tbl <- product_backorders_tbl %>% 
  select(-sku) %>% 
  mutate(across(where(is.character), as.factor))

set.seed(seed = 42)
split_obj                       <- rsample::initial_split(product_backorders_readable_tbl, prop = 0.85)
train_readable_tbl              <- training(split_obj)
test_readable_tbl               <- testing(split_obj)

recipe_obj <- recipe(went_on_backorder ~ ., data = train_readable_tbl) %>% 
  step_zv(all_predictors()) %>% 
  prep()

train_tbl <- bake(recipe_obj, new_data = train_readable_tbl)
test_tbl  <- bake(recipe_obj, new_data = test_readable_tbl)

split_h2o <- h2o.splitFrame(as.h2o(train_tbl), ratios = c(0.85), seed = 42)
train_h2o <- split_h2o[[1]]
valid_h2o <- split_h2o[[2]]
test_h2o  <- as.h2o(test_tbl)

# 2 Set response and predictors ----

y <- "went_on_backorder"
x <- setdiff(names(train_h2o), y)

# 3 Run AutoML ----

automl_models_h2o <- h2o.automl(
  x = x,
  y = y,
  training_frame    = train_h2o,
  validation_frame  = valid_h2o,
  leaderboard_frame = test_h2o,
  max_runtime_secs  = 30,
  nfolds            = 5 
)

# 4 View leaderboard ----

# Check results
automl_models_h2o@leaderboard

# Save the table for journal (I already ran it once, we don't need to overwrite
# the files every time we externally call this script during the next challenge)
# automl_models_h2o@leaderboard %>%
#  as_tibble() %>% 
#   saveRDS("~/GitHub/ss24-bdml-Adrian-0402/CHALLENGES/automated_ml_II_files/leaderboard_tbl.rds")

extract_h2o_model_name_by_position <- function(h2o_leaderboard, n = 1, verbose = T) {
  
  model_name <- h2o_leaderboard %>%
    as_tibble() %>%
    slice(n) %>%
    pull(model_id)
  
  if (verbose) message(model_name)
  
  return(model_name)
  
}

leader_model_h2o <- automl_models_h2o@leaderboard %>% 
  extract_h2o_model_name_by_position(1) %>% 
  h2o.getModel()

# 5 Predict with leader model ----

predictions_tbl <- h2o.predict(leader_model_h2o, newdata = test_h2o) %>% 
  as_tibble()

# Save the table for journal (I already ran it once, we don't need to overwrite
# the files every time we externally call this script during the next challenge)
# predictions_tbl %>%  
#   saveRDS("~/GitHub/ss24-bdml-Adrian-0402/CHALLENGES/automated_ml_II_files/predictions_tbl.rds")

# Prediction results
predictions_tbl

# 6 Save model ----

# Only to be run once, same model won't be overwritten if it
# already exists.

leader_model_h2o %>% 
  h2o.saveModel(path = "CHALLENGES/automated_ml_II_files/")
```

The leaderboard and predictions are imported here for simplicity:
```{r}
#| eval: true
#| message: false

library(tidyverse)

leaderboard_tbl <- readRDS("~/GitHub/ss24-bdml-Adrian-0402/CHALLENGES/automated_ml_II_files/leaderboard_tbl.rds")

leaderboard_tbl

predictions_tbl <- readRDS("~/GitHub/ss24-bdml-Adrian-0402/CHALLENGES/automated_ml_II_files/predictions_tbl.rds")

predictions_tbl
```
